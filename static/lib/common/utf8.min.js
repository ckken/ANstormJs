/**
 * Make sure the charset of the page using this script is
 * set to utf-8 or you will not get the correct results.
 */
var utf8 = function () {
    return{stringToBytes: function (c) {
        for (var d = [], f = c.length, b = 0, a, e; b < f;) {
            a = c.charCodeAt(b++);
            if (55296 <= a && 56319 >= a) {
                if (b === f)throw Error("Invalid format");
                e = c.charCodeAt(b++);
                if (!(56320 <= e && 57343 >= e))throw Error("Invalid format");
                a = (a - 55296 << 10) + (e - 56320) + 65536
            }
            128 > a ? d.push(a) : (2048 > a ? d.push(192 | a >> 6) : (65536 > a ? d.push(224 | a >> 12) : (d.push(240 | a >> 18), d.push(128 | a >> 12 & 63)), d.push(128 | a >> 6 & 63)), d.push(128 | a & 63))
        }
        return d
    }, bytesToString: function (c) {
        for (var d = "", f = c.length, b = 0, a; b < f;) {
            a = c[b++];
            a = 128 > a ? a : 6 === a >> 5 ? (a & 31) << 6 | c[b++] & 63 : 14 === a >> 4 ? (a & 15) << 12 | (c[b++] & 63) << 6 | c[b++] & 63 : (a & 7) << 18 | (c[b++] & 63) << 12 | (c[b++] & 63) << 6 | c[b++] & 63;
            var e = void 0, g = void 0;
            65536 > a ? a = String.fromCharCode(a) : (e = (a - 65536 >> 10) + 55296, g = (a & 1023) + 56320, a = String.fromCharCode(e, g));
            d += a
        }
        return d
    }}
}();
// convert string to utf8 bytes
//var bytes = utf8.stringToBytes('string to convert');
// convert utf8 bytes back to a string
//var str = utf8.bytesToString(bytes);
